<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.anytime.root.board.repository.MainBoardRepository">
	<resultMap type="com.anytime.root.board.dto.CommonLikeBoard" id="likecmnBoard">
		<id property="postNo" column="post_no"/>
		<result property="writerId" column="writer_id"/>
		<result property="nickname" column="nickname"/>
		<result property="subject" column="subject"/>
		<result property="content" column="content"/>
		<result property="views" column="views"/>
		<result property="writeDate" column="write_date"/>
		<result property="school" column="school"/>
		<result property="like" column="good"/>
	</resultMap>
	<resultMap type="com.anytime.root.board.dto.SchoolLikeBoard" id="likeschoolBoard">
		<id property="postNo" column="post_no"/>
		<result property="writerId" column="writer_id"/>
		<result property="nickname" column="nickname"/>
		<result property="section" column="section"/>
		<result property="subject" column="subject"/>
		<result property="content" column="content"/>
		<result property="views" column="views"/>
		<result property="writeDate" column="write_date"/>
		<result property="school" column="school"/>
		<result property="like" column="good"/>
	</resultMap>
	<resultMap type="com.anytime.root.board.dto.Reply" id="reply">
		<result property="replyNo" column="reply_no"/>
		<result property="postNo" column="post_no"/>
		<result property="parentNo" column="parent_no"/>
		<result property="depth" column="depth"/>
		<result property="writerId" column="writer_id"/>
		<result property="nickname" column="nickname"/>
		<result property="replyContent" column="reply_content"/>
		<result property="writeDate" column="write_date"/>
		<result property="school" column="school"/>
	</resultMap>
	<!--  북샵 미리보기 추가부분 -->
	<resultMap type="com.anytime.root.bookshop.dto.BookShopDTO"
		id="bookDto">
		<result property="boardId" column="boardId" />
		<result property="booktitle" column="booktitle" />
		<result property="bookisbn" column="bookisbn" />
		<result property="writer" column="writer" />
		<result property="school" column="school" />
		<result property="underline" column="underline" />
		<result property="handwrite" column="handwrite" />
		<result property="cover" column="cover" />
		<result property="nameWrite" column="nameWrite" />
		<result property="page" column="page" />
		<result property="meansOftransaction"
			column="meansOftransaction" />
		<result property="price" column="price" />
		<result property="SalesStatus" column="Sales_status" />
		<result property="createdate" column="createdate" />
	</resultMap>

	<resultMap
		type="com.anytime.root.bookshop.dto.BookShopPhotoDTO"
		id="bookDtoPhoto">
		<result property="id" column="id" />
		<result property="photo1" column="photo1" />
		<result property="photo2" column="photo2" />
		<result property="photo3" column="photo3" />
		<result property="photo4" column="photo4" />
		<result property="photo5" column="photo5" />
	</resultMap>
	
	<select id="getCmnBoardByDate" resultMap="likecmnBoard">
	<![CDATA[
		select B.* from
		(select A.* from 
		(select c.*, l.good from cmn_board c left outer join 
		(select post_no, count(post_no) as good from like_cmn_board group by post_no) l 
		on(c.post_no = l.post_no) order by write_date desc)A where rownum < 5)B
	]]>
	</select>
	<select id="getSchoolBoardByDate" resultMap="likeschoolBoard">
	<![CDATA[
		select B.* from
		(select A.* from 
		(select c.*, l.good from school_board c left outer join 
		(select post_no, count(post_no) as good from like_school_board group by post_no) l
		 on(c.post_no = l.post_no) order by write_date desc)A
		 where section = #{section} and school = #{school})B where rownum < 5
	]]>
	</select>
	<select id="getCmnBoardByLike" resultMap="likecmnBoard">
	<![CDATA[
		select B.* from
		(select A.* from
		(select c.*, NVL(l.lik, 0) as good from cmn_board c
		 left outer join (select post_no, count(post_no) as lik
		 from like_cmn_board group by post_no)l
		 on(c.post_no = l.post_no)
		 order by good desc, c.views desc, c.write_date desc)A
		 where rownum <5)B
	]]>
	</select>
	<select id="getSchoolBoardByLike" parameterType="String" resultMap="likeschoolBoard">
	<![CDATA[
		select B.* from
		(select A.* from 
		(select c.*, NVL(l.lik, 0) as good from school_board c 
		left outer join (select post_no, count(post_no) as lik 
		from like_school_board group by post_no) l on(c.post_no = l.post_no) 
		order by good desc, c.views desc, c.write_date desc)A 
		where school = #{school})B where rownum <5
	]]>
	</select>
	<select id="cmnListCount" resultType="int">
	<![CDATA[
		select count(*) from cmn_board where writer_id = #{id}
	]]>
	</select>
	<select id="schoolListCount" resultType="int">
	<![CDATA[
		select count(*) from school_board where writer_id = #{id}
	]]>
	</select>
	<select id="getMyCmnBoard" resultMap="likecmnBoard">
	<![CDATA[
		select B.* from
		(select rownum rn, A.* from 
		(select c.*, l.good from cmn_board c left outer join 
		(select post_no, count(post_no) as good from like_cmn_board group by post_no) l
		 on(c.post_no = l.post_no) order by c.post_no desc)A
		 where writer_id = #{id})B where rn between #{start} and #{end}
	]]>
	</select>
	<select id="getMySchoolBoard" resultMap="likeschoolBoard">
	<![CDATA[
		select B.* from
		(select rownum rn, A.* from 
		(select c.*, l.good from school_board c left outer join 
		(select post_no, count(post_no) as good from like_school_board group by post_no) l
		 on(c.post_no = l.post_no) order by c.post_no desc)A 
		 where writer_id = #{id})B where rn between #{start} and #{end}
	]]>
	</select>
	<select id="getMycreplyList" parameterType="String" resultMap="reply">
		select * from reply_cmn_board where writer_id = #{id}
	</select>
	<select id="getMysreplyList" parameterType="String" resultMap="reply">
		select * from reply_school_board where writer_id = #{id}
	</select>
	<select id="getSection" parameterType="int" resultType="String">
		select section from school_board where post_no = #{postNo}
	</select>
	<!-- 북샵 추가 by sj-->
	<select id="PreViewBookShop" resultMap="bookDto">
		select B.* from(select rownum rn, A.* from(select * from ANYTIMEBOARD order by BOARDID desc)A)B 
		 where rn between 1 and 4
	</select>
	<select id="PreViewBookShopPhoto" resultMap="bookDtoPhoto">
		select B.* from(select rownum rn, A.* from(select * from photoTable order by id desc)A)B 
		 where rn between 1 and 4
	</select>
</mapper>
